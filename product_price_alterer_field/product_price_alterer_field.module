<?php
//$Id$

/**
 * See http://drupal.org/node/106716 for more information.
 */

/**
 * Implementation of hook_init().
 */
function product_price_alterer_field_init()
{
	drupal_add_css(drupal_get_path("module", "product_price_alterer_field") . "/product_price_alterer_field.css");
}

/**
 * Implementation of hook_field_info().
 */
function product_price_alterer_field_field_info()
{
	return array(
		"product_price_alterer" => array(
			"label" => t("Discounts Product Price Alterer"),
			"description" => t("Alters price for products where uc_discounts_alt discounts apply when added with a quantity of one or less"),
			"callbacks" => array(
				"tables" => CONTENT_CALLBACK_DEFAULT,
				"arguments" => CONTENT_CALLBACK_DEFAULT,
			),
		),
	);
}

/**
 * Implementation of hook_content_is_empty().
 */
function product_price_alterer_field_content_is_empty($item, $field)
{
	return FALSE;
}

/**
 * Implementation of hook_widget_info().
 */
function product_price_alterer_field_widget_info()
{
	return array(
		"product_price_alterer" => array(
			"label" => "Default Display",
			"field types" => array("product_price_alterer"),
			"multiple values" => CONTENT_HANDLE_CORE,
			"callbacks" => array(
				"default value" => CONTENT_CALLBACK_DEFAULT,
			),
		),
	);
}

/**
 * Implementation of hook_widget().
 */
function product_price_alterer_field_widget(&$form, &$form_state, $field, $items, $delta = 0)
{
	$element = array(
		"#type" => $field["widget"]["type"],
		"#default_value" => isset($items[$delta]) ? $items[$delta] : NULL,
	);
	return $element;
}

/**
 * Implementation of hook_field_formatter_info().
 */
function product_price_alterer_field_field_formatter_info()
{
	return array(
		"default" => array(
			"label" => "Discount Description",
			"field types" => array("product_price_alterer"),
		),
	);
}

/**
 * Implementation of hook_field()
 */
function product_price_alterer_field_field($op, &$node, $field, &$items, $teaser, $page)
{
	switch ($op)
	{
		case "sanitize":
			//If items is empty, generate value by getting discounts that apply to this product
			if ( empty($items) )
			{
				$item = array();
				$item["product_price_alterer"] = 
					theme("product_price_alterer_field_get_price_alterer_javascript_for_product", $node->nid);
				$items[] = $item;
			}
			break;
	}
}

/**
 * Implementation of hook_theme().
 */
function product_price_alterer_field_theme()
{
	return array(
		"product_price_alterer_field_formatter_default" => array(
			"arguments" => array("element"),
		),
		"product_price_alterer_field_get_price_alterer_javascript_for_product" => array(
			"arguments" => array("product_id"),
		),
	);
}

/**
 * Theme function for discounts product price alterer element.
 */
function theme_product_price_alterer_field_formatter_default($element)
{
	return $element["#item"]["product_price_alterer"];
}

function theme_product_price_alterer_field_get_price_alterer_javascript_for_product($product_id)
{
	$product = node_load($product_id);
	if (is_null($product) || !$product)
		return NULL;

	//Determine discounts that apply to product when ordering a quantity of 1 or less
	$discounts = get_codeless_discounts_for_product_and_quantity($product_id, 1);
	if ( empty($discounts) )
		return NULL;

	//Sum total discount and determine price with discounts
	$total_discount_amount = 0;
	foreach ($discounts as $discount)
		$total_discount_amount += $discount->amount;
	$discounted_price_with_discounts = $product->sell_price - $total_discount_amount;

	$sell_price_string = "<div><strike>" . t("Price:") . "&nbsp;" 
		. uc_currency_format($product->sell_price) . "</strike></div>";
	$discount_price_string = 
		"<div class='product-price-alterer-field-discounted-price'>" 
			. t("Discounted price:") . "&nbsp;" . uc_currency_format($discounted_price_with_discounts)
		. "</div>";

	//Alter price using javascript
	drupal_add_js( sprintf("$(document).ready(function()
		{
			sell_price = $(\".sell-price:not(.product_price_alterer_field-processed)\").each(function()
				{
					if ( $(this).hasClass(\"product-info\") )
					{
						$(this).addClass(\"product_price_alterer_field-processed\")
							.addClass(\"product-price-alterer-field-sell-price\")
							.html(%s)
							.after(%s);
					}
				});
		});", drupal_to_js($sell_price_string), drupal_to_js($discount_price_string) ), "inline");

	//Always return NULL to not display an actual field to user
	return NULL;
}
